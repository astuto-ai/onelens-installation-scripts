name: Build and Deploy OnelensDeployer and Package Onelens-Agent Helm Chart

permissions:
  id-token: write
  contents: write

on:
  push:
    branches:
      - master
    paths:
      - 'Dockerfile'
      - 'charts/onelensdeployer/**'
  workflow_dispatch:

env:
  IMAGE_NAME: public.ecr.aws/w7k6q5m9/onelens-deployer
  REGION: us-east-1

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      docker_changed: ${{ steps.check_docker.outputs.changed }}
      chart_changed: ${{ steps.check_chart.outputs.changed }}
      chart_version_changed: ${{ steps.chart_version.outputs.version_changed }}
      new_chart_version: ${{ steps.chart_version.outputs.new_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Check if Dockerfile changed
        id: check_docker
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            docker_diff=$(git diff --name-only HEAD^ HEAD | grep '^Dockerfile' || true)
          else
            docker_diff=$(git diff --name-only HEAD | grep '^Dockerfile' || true)
          fi

          if [ -n "$docker_diff" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if chart files changed
        id: check_chart
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            chart_diff=$(git diff --name-only HEAD^ HEAD | grep '^charts/onelensdeployer/' || true)
          else
            chart_diff=$(git diff --name-only HEAD | grep '^charts/onelensdeployer/' || true)
          fi

          if [ -n "$chart_diff" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Detect Chart Version Change
        id: chart_version
        run: |
          CHART_PATH="charts/onelensdeployer/Chart.yaml"
          CURRENT_VERSION=$(yq '.version' $CHART_PATH)

          git show HEAD^:$CHART_PATH > old_chart.yaml || echo "version: 0.0.0" > old_chart.yaml
          PREVIOUS_VERSION=$(yq '.version' old_chart.yaml)

          echo "Current: $CURRENT_VERSION, Previous: $PREVIOUS_VERSION"
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  build_and_push_docker:
    needs: detect_changes
    if: needs.detect_changes.outputs.docker_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::609916866699:role/onelens-agent-github-actions-ecr-role
          aws-region: ${{ env.REGION }}
          role-session-name: GitHubActionsSession

      - name: Authenticate to AWS ECR Public
        run: |
          aws ecr-public get-login-password --region $REGION \
          | docker login --username AWS --password-stdin $IMAGE_NAME

      - name: Clone Onelens Installation Scripts
        run: |
          git clone https://github.com/astuto-ai/onelens-installation-scripts.git

      - name: Build and Push Multi-Arch Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t $IMAGE_NAME:latest \
            --push \
            ./onelens-installation-scripts

  package_and_push_helm:
    needs: detect_changes
    if: needs.detect_changes.outputs.chart_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check Chart Version Again Before Proceeding
        if: needs.detect_changes.outputs.chart_version_changed != 'true'
        run: |
          echo "‚ö†Ô∏è A file under charts/onelensdeployer/ changed, but Chart.yaml version did not change. Skipping Helm packaging."
          exit 0

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::609916866699:role/onelens-agent-github-actions-ecr-role
          aws-region: ${{ env.REGION }}
          role-session-name: GitHubActionsSession

      - name: Authenticate Helm with AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin 609916866699.dkr.ecr.us-east-1.amazonaws.com

      - name: Prepare chart packaging
        working-directory: charts/onelensdeployer
        run: |
          echo "üì• Updating Helm dependencies"
          helm dependency update
          echo "üì¶ Packaging Helm chart"
          helm package .
          pwd

      - name: Commit and push packaged chart to root
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mv /home/runner/work/onelens-installation-scripts/onelens-installation-scripts/charts/onelensdeployer/onelensdeployer-*.tgz /home/runner/work/onelens-installation-scripts/onelens-installation-scripts/

          echo "üóÇÔ∏è Updating Helm repo index"
          helm repo index . --url https://astuto-ai.github.io/onelens-installation-scripts/

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add onelensdeployer-*.tgz index.yaml
          git commit -m "Add packaged Helm chart and update index" || echo "Nothing to commit"
          git push --force https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:master
