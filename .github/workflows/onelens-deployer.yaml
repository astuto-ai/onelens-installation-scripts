name: Build and Deploy OnelensDeployer and Package Onelens-Agent Helm Chart

permissions:
  id-token: write
  contents: write

on:
  push:
    branches:
      - master
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'
      - 'charts/onelensdeployer/**'
  workflow_dispatch:


jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      docker_changed: ${{ steps.check_docker.outputs.changed }}
      entrypoint_changed: ${{ steps.check_entrypoint.outputs.changed }}
      chart_changed: ${{ steps.check_chart.outputs.changed }}
      chart_version_changed: ${{ steps.chart_version.outputs.version_changed }}
      new_chart_version: ${{ steps.chart_version.outputs.new_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Check if Dockerfile changed
        id: check_docker
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            docker_diff=$(git diff --name-only HEAD^ HEAD | grep '^Dockerfile' || true)
          else
            docker_diff=$(git diff --name-only HEAD | grep '^Dockerfile' || true)
          fi

          if [ -n "$docker_diff" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if entrypoint changed
        id: check_entrypoint
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            entrypoint_diff=$(git diff --name-only HEAD^ HEAD | grep '^entrypoint.sh' || true)
          else
            entrypoint_diff=$(git diff --name-only HEAD | grep '^entrypoint.sh' || true)
          fi

          if [ -n "$entrypoint_diff" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi



      - name: Check if chart files changed
        id: check_chart
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            chart_diff=$(git diff --name-only HEAD^ HEAD | grep '^charts/onelensdeployer/' || true)
          else
            chart_diff=$(git diff --name-only HEAD | grep '^charts/onelensdeployer/' || true)
          fi

          if [ -n "$chart_diff" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Detect Chart Version Change
        id: chart_version
        run: |
          CHART_PATH="charts/onelensdeployer/Chart.yaml"
          CURRENT_VERSION=$(yq '.version' $CHART_PATH)

          git show HEAD^:$CHART_PATH > old_chart.yaml || echo "version: 0.0.0" > old_chart.yaml
          PREVIOUS_VERSION=$(yq '.version' old_chart.yaml)

          echo "Current: $CURRENT_VERSION, Previous: $PREVIOUS_VERSION"
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  build_and_push_docker:
    needs: detect_changes
    if: needs.detect_changes.outputs.docker_changed == 'true' || needs.detect_changes.outputs.entrypoint_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::609916866699:role/onelens-agent-github-actions-ecr-role
          aws-region: us-east-1
          role-session-name: GitHubActionsSession
              

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build and Push Multi-Arch Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: public.ecr.aws/w7k6q5m9/onelens-deployer:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Upload Docker build success marker
        if: success()
        run: echo "success" > docker-build-success.txt

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: docker-build-success
          path: docker-build-success.txt

  package_and_push_helm:
    needs: detect_changes
    if: needs.detect_changes.outputs.chart_changed == 'true'
    runs-on: ubuntu-latest
    steps:


      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Check Chart.yaml version update
        run: |
          if [ "${{ needs.detect_changes.outputs.chart_version_changed }}" != "true" ]; then
            echo "⚠️ Changes detected in chart/onelensdeployer but Chart.yaml version was NOT updated."
            exit 1   # Fail job, or use exit 0 if you want to just warn and skip
          else
            echo "✅ Chart.yaml version updated, proceeding."
          fi
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::609916866699:role/onelens-agent-github-actions-ecr-role
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      - name: Authenticate Helm with AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin 609916866699.dkr.ecr.us-east-1.amazonaws.com

      - name: Prepare chart packaging
        working-directory: charts/onelensdeployer
        run: |
          echo "📥 Updating Helm dependencies"
          helm dependency update
          echo "📦 Packaging Helm chart"
          helm package .
          pwd

      - name: Commit and push packaged chart to root
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mv /home/runner/work/onelens-installation-scripts/onelens-installation-scripts/charts/onelensdeployer/onelensdeployer-*.tgz /home/runner/work/onelens-installation-scripts/onelens-installation-scripts/

          echo "🗂️ Updating Helm repo index"
          helm repo index . --url https://astuto-ai.github.io/onelens-installation-scripts/

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add onelensdeployer-*.tgz index.yaml
          git commit -m "Add packaged Helm chart and update index" || echo "Nothing to commit"
          git push --force https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:master

      - name: Extract packaged Helm chart version
        run: |
          VERSION=$(yq e '.version' charts/onelensdeployer/Chart.yaml)
          echo "$VERSION" > helm-package-version.txt
          echo "Packaged Helm chart version: $VERSION"

      - name: Upload Helm package version artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-package-version
          path: helm-package-version.txt
