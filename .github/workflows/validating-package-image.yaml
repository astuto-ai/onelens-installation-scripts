name: Validate Published Helm Charts and Scan Docker Image

on:
  workflow_run:
    workflows: 
      - Build and Deploy OnelensDeployer and Package Onelens-Agent Helm Chart
      - Package Onelens-Agent Helm Chart
    types:
      - completed

  workflow_dispatch:

jobs:
  validate_helm_chart:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Download Helm package version artifact from previous workflow
        uses: actions/download-artifact@v4
        with:
          name: helm-package-version
        continue-on-error: true  # In case artifact not present

      - name: Check if new Helm package version exists
        id: check_version
        run: |
          if [ ! -f "helm-package-version.txt" ]; then
            echo "No helm-package-version artifact found, proceeding with validation."
            echo "proceed=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          NEW_VERSION=$(cat helm-package-version.txt)
          echo "Downloaded Helm package version: $NEW_VERSION"

          # Check if last validated version file exists in repo or workspace
          if [ -f "last_validated_version.txt" ]; then
            LAST_VERSION=$(cat last_validated_version.txt)
            echo "Last validated Helm package version: $LAST_VERSION"
          else
            echo "No last validated version record found."
            LAST_VERSION=""
          fi

          if [ "$NEW_VERSION" = "$LAST_VERSION" ]; then
            echo "Helm package version unchanged. Skipping validation."
            echo "proceed=false" >> $GITHUB_OUTPUT
          else
            echo "New Helm package version detected. Proceeding with validation."
            echo "$NEW_VERSION" > last_validated_version.txt
            echo "proceed=true" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no new package
        if: steps.check_version.outputs.proceed != 'true'
        run: |
          echo "No new Helm package to validate. Exiting."
          exit 0
          
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Wait for GitHub Pages sync
        run: sleep 120  # Optional buffer for GH Pages update

      - name: Add Helm Repo
        run: |
          helm repo add astuto https://astuto-ai.github.io/onelens-installation-scripts/
          helm repo update

      - name: Validate onelensdeployer Chart (if present)
        run: |
          CHART_NAME="onelensdeployer"
          if helm search repo astuto/$CHART_NAME --versions -o json | jq -e '.[0]' >/dev/null; then
            VERSION=$(helm search repo astuto/$CHART_NAME --versions -o json | jq -r '.[0].version')
            echo " Validating $CHART_NAME version: $VERSION"
            helm pull astuto/$CHART_NAME --version "$VERSION" --untar || { echo " Failed to pull chart."; exit 1; }
            helm lint $CHART_NAME || echo " Helm lint warnings/errors found in $CHART_NAME"
          else
            echo " $CHART_NAME not found in Helm repo. Skipping."
          fi

      - name: Validate onelens-agent Chart (if present)
        run: |
          CHART_NAME="onelens-agent"
          if helm search repo astuto/$CHART_NAME --devel --versions -o json | jq -e '.[0]' >/dev/null; then
            VERSION=$(helm search repo astuto/$CHART_NAME --devel --versions -o json | jq -r '.[0].version')
            echo " Validating $CHART_NAME version: $VERSION"
            [ -d "$CHART_NAME" ] && rm -rf "$CHART_NAME"
            helm pull astuto/$CHART_NAME --version "$VERSION" --untar || { echo " Failed to pull chart."; exit 1; }
            helm lint "$CHART_NAME" || echo " Helm lint warnings/errors found in $CHART_NAME"
          else
            echo " $CHART_NAME not found in Helm repo. Skipping."
          fi

  trivy_scan:
  
    permissions:
      id-token: write
      contents: read
      
    name: Trivy Scan on Docker Image
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Download docker build artifact (if present)
        uses: actions/download-artifact@v4
        with:
          name: docker-build-success
        continue-on-error: true

      - name: Check for docker build marker
        id: check
        run: |
          if [ -f "docker-build-success.txt" ]; then
            echo "Docker build marker found. Proceeding with scan."
            echo "proceed=true" >> $GITHUB_OUTPUT
          else
            echo "No docker build marker found. Skipping scan."
            echo "proceed=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if docker image was not pushed
        if: steps.check.outputs.proceed != 'true'
        run: |
          echo " Skipping Trivy scan: No new Docker image built in previous workflow."
          exit 0

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::609916866699:role/onelens-agent-github-actions-ecr-role
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Run Trivy Scan on Docker Image
        run: |
          IMAGE="public.ecr.aws/w7k6q5m9/onelens-deployer:latest"
          echo " Scanning image $IMAGE with Trivy"
          trivy image --severity CRITICAL,HIGH --no-progress $IMAGE
