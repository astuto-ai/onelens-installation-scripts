onelens-agent:
  enabled: true

  image:
    repository: public.ecr.aws/w7k6q5m9/onelens-agent
    tag: v0.1.1-beta.2
    pullPolicy: IfNotPresent

  nameOverride: "onelens-agent"
  fullnameOverride: "onelens-agent"

  serviceAccount:
    enabled: true
    name: "onelens-agent-sa"
    annotations: {}

  storageClass:
    enabled: true  
    name: onelens-sc
    provisioner: ebs.csi.aws.com
    reclaimPolicy: Retain
    volumeBindingMode: WaitForFirstConsumer
    volumeType: gp3
    allowVolumeExpansion: false

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "500m"
      memory: "256Mi"

  # CronJob configuration
  cronJob:
    cronSchedule: "0 * * * *"  # Run once an hour at the top of the hour
    concurrencyPolicy: "Forbid"  # Prevent concurrent job executions
    successfulJobsHistoryLimit: 3 # Number of successful jobs to keep
    failedJobsHistoryLimit: 2 # Number of failed jobs to keep
    suspend: false # Suspend the job
    restartPolicy: "Never" # Restart the job on failure
    healthCheck: false  # Set to true to enable health check for cronjob pod

    # Tolerations allow the agent to be scheduled on nodes with matching taints
    tolerations: []
    # - key: "key"
    #   operator: "Equal"
    #   value: "value"
    #   effect: "NoSchedule"
    nodeSelector: {}
      # kubernetes.io/os: linux

  # Environment variables
  env:
    # Health Checker URLs
    OPENCOST_HEALTH_CHECKER_URL: "http://onelens-agent-prometheus-opencost-exporter:9003/healthz"
    PROMETHEUS_HEALTH_CHECKER_URL: "http://onelens-agent-prometheus-server:80/-/healthy"

  secrets:
    # Secrets for onelens-agent
    API_BASE_URL: "https://dev-api.onelens.cloud" # DON'T ADD TRAILING SLASH
    CLUSTER_TOKEN: "your-raw-token" # Don't encode
    REGISTRATION_ID: "your-raw-id" # Don't encode

prometheus:
  enabled: true
  server:
    image:
      repository: quay.io/prometheus/prometheus
      tag: "v3.1.0"
      pullPolicy: IfNotPresent
    persistentVolume:
      enabled: false
      storageClass: onelens-sc
      accessModes:
        - ReadWriteOnce
      mountPath: /data
      size: 10Gi
      annotations:
        helm.sh/resource-policy: keep
    retention: "30d"
    retentionSize: "9GB"


  extraScrapeConfigs: |
    - job_name: opencost
      honor_labels: true
      scrape_interval: 1m
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      dns_sd_configs:
      - names:
        - onelens-agent-prometheus-opencost-exporter
        type: 'A'
        port: 9003
  alertmanager:
    enabled: false
  kube-state-metrics:
    enabled: true
    collectors:
      - cronjobs                     # Scheduled jobs that run at specified intervals
      - daemonsets                   # Ensures a pod runs on all (or some) nodes
      - deployments                  # Manages ReplicaSets and Pods
      - horizontalpodautoscalers     # Automatically scales Pod replicas based on metrics
      - jobs                         # One-time tasks that run to completion
      - limitranges                  # Enforces resource limits in a namespace
      - namespaces                   # Virtual clusters within a physical cluster
      - nodes                        # Physical or virtual machines in the cluster
      - persistentvolumeclaims       # Storage requests by Pods
      - persistentvolumes           # Cluster storage resources
      - pods                        # Smallest deployable units in Kubernetes
      - replicasets                 # Maintains a stable set of replica Pods
      - resourcequotas              # Limits aggregate resource consumption per namespace
      - statefulsets               # Manages stateful applications
      - storageclasses             # Defines different classes of storage
    # Comma-separated list of metrics to be exposed.
    # This list comprises of exact metric names and/or regex patterns.
    # The allowlist and denylist are mutually exclusive.
    metricAllowlist: []

    # Comma-separated list of metrics not to be enabled.
    # This list comprises of exact metric names and/or regex patterns.
    # The allowlist and denylist are mutually exclusive.
    metricDenylist: []

    metricLabelsAllowlist:
      - namespaces=[*]
      - pods=[*]
      - deployments=[*]
      - replicasets=[*]
      - daemonsets=[*]
      - statefulsets=[*]
      - cronjobs=[*]
      - jobs=[*]
      - horizontalpodautoscalers=[*]
      - limitranges=[*]
      - persistentvolumeclaims=[*]
      - storageclasses=[*]
      - nodes=[*]
      - resourcequotas=[*]
      - persistentvolumes=[*]
  prometheus-pushgateway:
    enabled: true
  prometheus-node-exporter:
    enabled: false
    nodeSelector:
      kubernetes.io/os: linux
    tolerations:
      - effect: NoSchedule
        operator: Exists
  kubernetes.io/os: linux
  global:
    scrape_interval: 30s
    scrape_timeout: 10s
    evaluation_interval: 1m

prometheus-opencost-exporter:
  enabled: true
  opencost:    
    exporter:
      cloudProviderApiKey: ""
      defaultClusterId: 'default-cluster'
      image:
        registry: quay.io
        repository: kubecost1/kubecost-cost-model
        tag: ""
        pullPolicy: IfNotPresent
      replicas: 1
      resources:
        requests:
          cpu: '10m'
          memory: '55Mi'
        limits:
          cpu: '999m'
          memory: '1Gi'
      persistence:
        enabled: false
    prometheus:
      secret_name: ~
      username: ""
      username_key: DB_BASIC_AUTH_USERNAME
      password: ""
      password_key: DB_BASIC_AUTH_PW
      bearer_token: ""
      bearer_token_key: DB_BEARER_TOKEN
      external:
        enabled: false
        url: "https://prometheus-dev.onelens.cloud"
      internal:
        enabled: true
        serviceName: onelens-agent-prometheus-server
        namespaceName: onelens-agent
        port: 80
