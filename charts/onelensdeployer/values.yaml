job:
  enabled: true
  name: onelensdeployerjob
  image: public.ecr.aws/w7k6q5m9/onelens-deployer
  imagePullPolicy: Always
  restartPolicy: Never
  env: {}

cronjob:
  enabled: false
  name: onelensdeployercronjob
  schedule: "* * * * *"
  image: public.ecr.aws/w7k6q5m9/onelens-deployer
  restartPolicy: Never
  env: {}
  concurrencyPolicy: "Forbid"  # Prevent concurrent job executions
  successfulJobsHistoryLimit: 1 # Number of successful jobs to keep
  failedJobsHistoryLimit: 1 # Number of failed jobs to keep
  suspend: false # Suspend the job
  healthCheck: false  # Set to true to enable health check for cronjob pod

  # Tolerations allow the agent to be scheduled on nodes with matching taints
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"
  nodeSelector: {}
    # kubernetes.io/os: linux

serviceAccount:
  enabled: true
  name: onelensdeployer-sa


clusterRole:
  name: onelensdeployer-clusterrole
  rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  # - apiGroups:
  #   - ""
  #   resources:
  #   - pods/attach
  #   - pods/exec
  #   - pods/portforward
  #   - pods/proxy
  #   - secrets
  #   - services/proxy
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - ""
  #   resources:
  #   - serviceaccounts
  #   verbs:
  #   - impersonate
  # - apiGroups:
  #   - ""
  #   resources:
  #   - pods
  #   - pods/attach
  #   - pods/exec
  #   - pods/portforward
  #   - pods/proxy
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - ""
  #   resources:
  #   - pods/eviction
  #   verbs:
  #   - create
  # - apiGroups:
  #   - ""
  #   resources:
  #   - configmaps
  #   - events
  #   - persistentvolumeclaims
  #   - replicationcontrollers
  #   - replicationcontrollers/scale
  #   - secrets
  #   - serviceaccounts
  #   - services
  #   - services/proxy
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - ""
  #   resources:
  #   - serviceaccounts/token
  #   verbs:
  #   - create
  # - apiGroups:
  #   - apps
  #   resources:
  #   - daemonsets
  #   - deployments
  #   - deployments/rollback
  #   - deployments/scale
  #   - replicasets
  #   - replicasets/scale
  #   - statefulsets
  #   - statefulsets/scale
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - autoscaling
  #   resources:
  #   - horizontalpodautoscalers
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - batch
  #   resources:
  #   - cronjobs
  #   - jobs
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - extensions
  #   resources:
  #   - daemonsets
  #   - deployments
  #   - deployments/rollback
  #   - deployments/scale
  #   - ingresses
  #   - networkpolicies
  #   - replicasets
  #   - replicasets/scale
  #   - replicationcontrollers/scale
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - policy
  #   resources:
  #   - poddisruptionbudgets
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - networking.k8s.io
  #   resources:
  #   - ingresses
  #   - networkpolicies
  #   verbs:
  #   - create
  #   - patch
  #   - update
  # - apiGroups:
  #   - coordination.k8s.io
  #   resources:
  #   - leases
  #   verbs:
  #   - create
  #   - get
  #   - list
  #   - patch
  #   - update
  #   - watch
  # - apiGroups:
  #   - metrics.k8s.io
  #   resources:
  #   - pods
  #   - nodes
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - ""
  #   resources:
  #   - configmaps
  #   - endpoints
  #   - persistentvolumeclaims
  #   - persistentvolumeclaims/status
  #   - pods
  #   - replicationcontrollers
  #   - replicationcontrollers/scale
  #   - serviceaccounts
  #   - services
  #   - services/status
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - ""
  #   resources:
  #   - bindings
  #   - events
  #   - limitranges
  #   - namespaces/status
  #   - pods/log
  #   - pods/status
  #   - replicationcontrollers/status
  #   - resourcequotas
  #   - resourcequotas/status
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - ""
  #   resources:
  #   - namespaces
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - discovery.k8s.io
  #   resources:
  #   - endpointslices
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - apps
  #   resources:
  #   - controllerrevisions
  #   - daemonsets
  #   - daemonsets/status
  #   - deployments
  #   - deployments/scale
  #   - deployments/status
  #   - replicasets
  #   - replicasets/scale
  #   - replicasets/status
  #   - statefulsets
  #   - statefulsets/scale
  #   - statefulsets/status
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - autoscaling
  #   resources:
  #   - horizontalpodautoscalers
  #   - horizontalpodautoscalers/status
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - batch
  #   resources:
  #   - cronjobs
  #   - cronjobs/status
  #   - jobs
  #   - jobs/status
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - extensions
  #   resources:
  #   - daemonsets
  #   - daemonsets/status
  #   - deployments
  #   - deployments/scale
  #   - deployments/status
  #   - ingresses
  #   - ingresses/status
  #   - networkpolicies
  #   - replicasets
  #   - replicasets/scale
  #   - replicasets/status
  #   - replicationcontrollers/scale
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - policy
  #   resources:
  #   - poddisruptionbudgets
  #   - poddisruptionbudgets/status
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - networking.k8s.io
  #   resources:
  #   - ingresses
  #   - ingresses/status
  #   - networkpolicies
  #   verbs:
  #   - get
  #   - list
  #   - watch
  # - apiGroups:
  #   - authorization.k8s.io
  #   resources:
  #   - localsubjectaccessreviews
  #   verbs:
  #   - create
  # - apiGroups:
  #   - rbac.authorization.k8s.io
  #   resources:
  #   - rolebindings
  #   - roles
  #   verbs:
  #   - create
  #   - get
  #   - list
  #   - patch
  #   - update
  #   - watch
  # - apiGroups:
  #   - storage.k8s.io
  #   resources:
  #   - storageclasses
  #   verbs:
  #   - get
  #   - list
  #   - watch


clusterRoleBinding:
  name: onelensdeployer-clusterrolebinding