job:
  enabled: true
  name: onelensdeployerjob
  image: public.ecr.aws/w7k6q5m9/onelens-deployer
  imagePullPolicy: Always
  restartPolicy: Never
  env: {}

cronjob:
  enabled: false
  name: onelensdeployercronjob
  schedule: "* * * * *"
  image: public.ecr.aws/w7k6q5m9/onelens-deployer
  restartPolicy: Never
  env: {}
  concurrencyPolicy: "Forbid"  # Prevent concurrent job executions
  successfulJobsHistoryLimit: 2 # Number of successful jobs to keep
  failedJobsHistoryLimit: 2 # Number of failed jobs to keep
  suspend: false # Suspend the job
  healthCheck: false  # Set to true to enable health check for cronjob pod

  # Tolerations allow the agent to be scheduled on nodes with matching taints
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"
  nodeSelector: {}
    # kubernetes.io/os: linux

serviceAccount:
  enabled: true
  name: onelensdeployer-sa

clusterRole:
  name: onelensdeployer-clusterrole
  rules:
  # Core API resources
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/exec", "pods/attach", "pods/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  - apiGroups: [""]
    resources: ["services", "endpoints", "nodes", "nodes/proxy", "nodes/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  - apiGroups: [""]
    resources: ["namespaces", "namespaces/status", "namespaces/finalize"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "serviceaccounts", "resourcequotas", "limitranges"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  - apiGroups: [""]
    resources: ["persistentvolumes", "persistentvolumeclaims", "events"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Apps API resources
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "statefulsets", "replicasets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Batch API resources
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Networking API resources
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingressclasses", "networkpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Storage API resources
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "volumeattachments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # RBAC API resources
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # API Extensions
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Autoscaling
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Policy
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets", "podsecuritypolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Certificates
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests", "certificatesigningrequests/approval", "certificatesigningrequests/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Coordination (for leases)
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Discovery and metrics
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]
    
  # Authorization
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews", "selfsubjectaccessreviews", "selfsubjectrulesreviews"]
    verbs: ["create"]

  # Extensions API group (deprecated but included for backward compatibility)
  - apiGroups: ["extensions"]
    resources: ["daemonsets", "deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

clusterRoleBinding:
  name: onelensdeployer-clusterrolebinding


